---
layout: post
title:  "페이지,라우팅 및 조회 수"
date:   2018-08-17
---
 

<br>
<br>
<h3 style='width: 100%;'>폴더에서 경로를 </h3>
<br>

pages 폴더에서 경로를 정해줄수있다.

'/' 경로는 index.vue

'/users'를 만들고 싶다면 pages 폴더에 users.vue를 생성하거나

users 폴더를 생성하고 index.vue 파일을 생성하면 된다. 

<br>
<br>

<h3 style='width: 100%;'>동적 경로 만들기 </h3>
<br>

동적 경로를 정해줄수있다.

'users/:id' 경로를 만드려면 

users 폴더 안에 _id.vue 파일 또는 _id 폴더(추천)를 만들고 그안에 index.vue 파일을 생성하면 된다.

<br>
<br>

<h3 style='width: 100%;'>링크 사용 </h3>
<br>

a tag 말고 nuxt-link 나 router-link

히스토리모드와 해쉬뱅 모드에서는 주소 체계가 달라서  태그를 사용할 경우 모드 변경시 주소값을 일일이 변경해 줘야한다.

 하지만 router-link  는 변경할 필요가 없다.

a 태그를 클릭하면 화면을 갱신하는데 router-link는 이를 차단해준다. 갱신 없이 화면을 이동할 수 있다.

<br>
<br>

<h3 style='width: 100%;'>동적 route 유효성검사  </h3>
<br>

params 데이터 유효성 검사 

<figure>
	<img style='width:1200px;' src="{{ '/assets/img/post/Vue/p1/validate.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> 유효검사 </figcaption>
</figure>


<br>
<br>

<h3 style='width: 100%;'>중첩된 라우터  </h3>
<br>

<figure>
    <img style='width:500x; left:500px;' src="{{ '/assets/img/post/Vue/p1/nested1.png' | prepend: site.baseurl }}" alt=""> 
    <figcaption> 중첩라우터 Page 구조 </figcaption>
</figure>

diet.vue 파일 , diet 폴더안 index.vue 파일이 중첩되어있다. 

<figure>
	<img style='width:700px;' src="{{ '/assets/img/post/Vue/p1/nested2.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> 중첩라우터 컴포넌트 구조 </figcaption>
</figure>

컴포넌트 구조는 저렇게 되어있다.

<figure>
	<img style='width:800px;' src="{{ '/assets/img/post/Vue/p1/nested3.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> 중첩라우터 코드 </figcaption>
</figure>

폴더에 생성된 idnex를 작성하고 같은 이름의 vue 파일에 nuxt-child 코드를 넣어주면 된다.

<br>
<br>

<h3 style='width: 100%;'>레이아웃, 페이지 & 컴포넌트 </h3>
<br>

<figure>
	<img style='width:500px;' src="{{ '/assets/img/post/Vue/p1/layouts.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> layouts </figcaption>
</figure>

레이아웃 활용한 중첩! 페이지 

<figure>
	<img style='width:900px;' src="{{ '/assets/img/post/Vue/p1/layouts2.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> layouts - diet.vue 코드</figcaption>
</figure>

page의 중첩된 diet.vue가 /nuxt로 치환되어 구동된다. 
<br>
<br>

<h3 style='width: 100%;'>기본오류 페이지 </h3>
<br>

기본 에러 페이지 만드는 방법
<figure>
	<img style='width:500px;' src="{{ '/assets/img/post/Vue/p1/error2.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> layouts - error.vue </figcaption>
</figure>

layout 페이지에 error.vue 파일을 만든다.
<br>
<figure>
	<img style='width:900px;' src="{{ '/assets/img/post/Vue/p1/error.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> error.vue 코드</figcaption>
</figure>

에러가 발생하면 erorr 페이자가 출력된다. 
<br>
<br>

<h3 style='width: 100%;'>components 와 Layout(default) 사용</h3>
<br>

components 폴더에 헤더 컴포넌트를 생성해서 메인 페이지에 적용시켜 보겠다.

<figure>
	<img style='width:900px;' src="{{ '/assets/img/post/Vue/p1/component_1.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> 컴포넌트 경로 및 코드 </figcaption>
</figure>

<figure>
	<img style='width:900px;' src="{{ '/assets/img/post/Vue/p1/component_2.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> 컴포넌트 적용 </figcaption>
</figure>

하지만 이 컴포넌트는 메인페이지에만 적용시킨 것이지 다른 페이지에는 적용되지 않았다.

다른페이지에 적용시키려면 페이지마다 import하여 적용시켜주는 방법이있다.

일반적으로 header는 모든 페이지에 사용되기때문에 위 방법은 번거롭다. 

모든페이지에 적용시키는 방법은 layout에 default 컴포넌트에 적용시키는것이다. 

<figure>
	<img style='width:900px;' src="{{ '/assets/img/post/Vue/p1/component_3.png' | prepend: site.baseurl }}" alt=""> 
	<figcaption> 모든 페이지에 Header 적용 </figcaption>
</figure>

간단하다 layout - default.vue 에 적용시켜주면 모든페이지에 header가 적용된다.

<br>
<br>

<h3 style='width: 100%;'>스타일 적용시키기</h3>
<br>

레이아웃이 많은데 페이지 css를 적용시키는 방법은 asset에 css폴더를 추출하여 적용시키고

nuxt.config.js css 부분에 경로를 추가해주면 된다. 

왠만하면 pasge에서 style를 수정하는것보다 컴포넌트에 css를 추가,수정하는것이 낫다.

<style></style> <style scope></style> 동시 설정가능하다.